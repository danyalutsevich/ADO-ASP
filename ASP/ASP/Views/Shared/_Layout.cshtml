<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - ASP</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<script src="https://cdn.tailwindcss.com"></script>
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/ASP.styles.css" asp-append-version="true" />
	<script>
		tailwind.config = {
			darkMode: "class"
																						theme: {
				extend: {
					colors: {
						clifford: '#da373d',
					}
				}
			}
		}
	</script>

</head>
<body>
	<header>
		<div class="flex items-center justify-between m-10">
			<a class="text-3xl" asp-area="" asp-controller="Home" asp-action="Index">ASP</a>
			<a class="nav-link text-black" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
			<a class="nav-link text-black" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
			<a class="nav-link text-black" asp-area="" asp-controller="Home" asp-action="Intro">Intro</a>
			<a class="nav-link text-black" asp-area="" asp-controller="Home" asp-action="AboutURL">AboutURL</a>

		</div>
	</header>

	<!-- Button trigger modal -->
	<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
		Login
	</button>

	<!-- Modal -->
	<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<form asp-action="Login" asp-controller="User" method="post">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="exampleModalLabel">Authentication</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<div class="form-group">
							<label for="user-login">Login</label>
							<input id="user-login" type="text"
								   name="user-login"
								   class="form-control"
								   placeholder="Login" />
						</div>
						<div class="form-group">
							<label for="user-password">Password</label>
							<input id="user-password" type="password"
								   name="user-password"
								   class="form-control"
								   placeholder="Password" />
						</div>
						<div class="modal-auth">
							
						</div>
						
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
						<button type="button" class="btn btn-primary" id="login-button">Login</button>
					</div>
				</div>
			</form>
		</div>
	</div>

	<div>
		<main role="main">
			@RenderBody()
		</main>
	</div>

	<script>
		
		document.addEventListener("DOMContentLoaded", () => {
			const loginButton = document.getElementById("login-button");
			if (!loginButton) throw "login-button not found";
			loginButton.addEventListener("click", loginButtonClick);
		});
		function loginButtonClick() {
			const userLoginInput = document.getElementById("user-login");
			if (!userLoginInput) throw "user-login input not found";
			const login = userLoginInput.value;

			const userPasswordInput = document.getElementById("user-password");
			if (!userPasswordInput) throw "user-password input not found";
			const password = userPasswordInput.value;

			window.fetch("/User/Login", {
				method: "POST",
				headers: {
					"Content-Type": "application/x-www-form-urlencoded"
				},
				body: `user-login=${login}&user-password=${password}`
			})
				.then(r => r.text())
				.then(t => {
					if (t === "OK") window.location.reload();
					else {
						const modalBody = document.querySelector(".modal-auth");
						if (!modalBody) throw "modal-auth not found";
						modalBody.innerHTML = `<div class="alert alert-danger" role="alert">
															${t}
														</div>`;
					}
				});
		}

	</script>
	
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
